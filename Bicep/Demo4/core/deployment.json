{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.412.5873",
      "templateHash": "17959637119398126314"
    }
  },
  "parameters": {
    "envSuffix": {
      "type": "string",
      "defaultValue": "-prod"
    },
    "location": {
      "type": "string",
      "defaultValue": "westeurope"
    },
    "projectName": {
      "type": "string",
      "defaultValue": "CloudBrew"
    },
    "core_deployment": {
      "type": "bool",
      "defaultValue": true
    },
    "infra_deployment": {
      "type": "bool",
      "defaultValue": true
    }
  },
  "functions": [],
  "resources": [
    {
      "condition": "[parameters('core_deployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "core_deployment",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "envSuffix": {
            "value": "[parameters('envSuffix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "projectName": {
            "value": "[parameters('projectName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.412.5873",
              "templateHash": "1963983917556320442"
            }
          },
          "parameters": {
            "envSuffix": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "westeurope"
            },
            "projectName": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "resourceGroups": [
              "[format('rg-{0}-batch', parameters('projectName'))]",
              "[format('rg-{0}-storage', parameters('projectName'))]",
              "[format('rg-{0}-db', parameters('projectName'))]"
            ]
          },
          "resources": [
            {
              "copy": {
                "name": "rgs",
                "count": "[length(variables('resourceGroups'))]"
              },
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2021-04-01",
              "name": "[format('{0}{1}', variables('resourceGroups')[copyIndex()], parameters('envSuffix'))]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2021-04-01",
              "name": "[format('rg-{0}-networking{1}', parameters('projectName'), parameters('envSuffix'))]",
              "location": "[parameters('location')]"
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "vNET",
              "resourceGroup": "[format('rg-{0}-networking{1}', parameters('projectName'), parameters('envSuffix'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vnetaddressspace": {
                    "value": "12"
                  },
                  "envSuffix": {
                    "value": "[parameters('envSuffix')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "projectName": {
                    "value": "[parameters('projectName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.412.5873",
                      "templateHash": "11985840355910984831"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "vnetaddressspace": {
                      "type": "string",
                      "defaultValue": "10"
                    },
                    "envSuffix": {
                      "type": "string"
                    },
                    "privateDnsZones_private_cloudBrew_name": {
                      "type": "string",
                      "defaultValue": "private.cloudBrew"
                    },
                    "projectName": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "sharedRules": "[json('{\n    \"securityRules\": [\n        {\n            \"name\": \"HTTPS\",\n            \"properties\": {\n                \"description\": \"HTTPS\",\n                \"protocol\": \"Tcp\",\n                \"sourcePortRange\": \"*\",\n                \"destinationPortRange\": \"443\",\n                \"sourceAddressPrefix\": \"*\",\n                \"destinationAddressPrefix\": \"*\",\n                \"access\": \"Allow\",\n                \"priority\": 200,\n                \"direction\": \"Inbound\",\n                \"sourcePortRanges\": [],\n                \"destinationPortRanges\": [],\n                \"sourceAddressPrefixes\": [],\n                \"destinationAddressPrefixes\": []\n            }\n        },\n        {\n            \"name\": \"HTTP\",\n            \"properties\": {\n                \"description\": \"HTTP\",\n                \"protocol\": \"Tcp\",\n                \"sourcePortRange\": \"*\",\n                \"destinationPortRange\": \"80\",\n                \"sourceAddressPrefix\": \"*\",\n                \"destinationAddressPrefix\": \"*\",\n                \"access\": \"Allow\",\n                \"priority\": 201,\n                \"direction\": \"Inbound\",\n                \"sourcePortRanges\": [],\n                \"destinationPortRanges\": [],\n                \"sourceAddressPrefixes\": [],\n                \"destinationAddressPrefixes\": []\n            }\n        },\n        {\n            \"name\": \"RDP\",\n            \"properties\": {\n                \"description\": \"RDP\",\n                \"protocol\": \"Tcp\",\n                \"sourcePortRange\": \"*\",\n                \"destinationPortRange\": \"3389\",\n                \"sourceAddressPrefix\": \"10.12.20.64/26\",\n                \"destinationAddressPrefix\": \"*\",\n                \"access\": \"Allow\",\n                \"priority\": 210,\n                \"direction\": \"Inbound\",\n                \"sourcePortRanges\": [],\n                \"destinationPortRanges\": [],\n                \"sourceAddressPrefixes\": [],\n                \"destinationAddressPrefixes\": []\n            }\n        }\n    ]\n}').securityRules]",
                    "client_subnets": [
                      {
                        "name": "batch",
                        "subnetPrefix": "[format('10.{0}.9.0/24', parameters('vnetaddressspace'))]",
                        "serviceEndpoints": null,
                        "privateEndpointNetworkPolicies": "Enabled",
                        "networkSecurityGroup": {
                          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-batch{0}', parameters('envSuffix')))]"
                        }
                      },
                      {
                        "name": "private-endpoint",
                        "subnetPrefix": "[format('10.{0}.11.0/24', parameters('vnetaddressspace'))]",
                        "serviceEndpoints": [
                          {
                            "locations": [
                              "[parameters('location')]"
                            ],
                            "service": "Microsoft.Storage"
                          }
                        ],
                        "privateEndpointNetworkPolicies": "Disabled",
                        "networkSecurityGroup": null
                      }
                    ],
                    "hub_subnets": [
                      {
                        "name": "AzureFirewallSubnet",
                        "subnetPrefix": "[format('10.{0}.20.0/26', parameters('vnetaddressspace'))]",
                        "networkSecurityGroup": null,
                        "routeTable": null
                      },
                      {
                        "name": "AzureBastionSubnet",
                        "subnetPrefix": "[format('10.{0}.20.64/26', parameters('vnetaddressspace'))]",
                        "networkSecurityGroup": {
                          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-hub-bastion{0}', parameters('envSuffix')))]"
                        },
                        "routeTable": null
                      },
                      {
                        "name": "GatewaySubnet",
                        "subnetPrefix": "[format('10.{0}.20.128/26', parameters('vnetaddressspace'))]",
                        "networkSecurityGroup": null,
                        "routeTable": null
                      },
                      {
                        "name": "ApplicationGateway",
                        "subnetPrefix": "[format('10.{0}.20.192/26', parameters('vnetaddressspace'))]",
                        "networkSecurityGroup": null,
                        "routeTable": null
                      }
                    ],
                    "BatchCustomRules": [
                      {
                        "name": "Port_8002",
                        "properties": {
                          "protocol": "Tcp",
                          "sourcePortRange": "*",
                          "destinationPortRange": "8002",
                          "sourceAddressPrefix": "*",
                          "destinationAddressPrefix": "*",
                          "access": "Allow",
                          "priority": 102,
                          "direction": "Inbound",
                          "sourcePortRanges": [],
                          "destinationPortRanges": [],
                          "sourceAddressPrefixes": [],
                          "destinationAddressPrefixes": []
                        }
                      },
                      {
                        "name": "Port_8000_Range",
                        "properties": {
                          "protocol": "Tcp",
                          "sourcePortRange": "*",
                          "destinationPortRange": "8000-8019",
                          "sourceAddressPrefix": "*",
                          "destinationAddressPrefix": "*",
                          "access": "Allow",
                          "priority": 103,
                          "direction": "Inbound",
                          "sourcePortRanges": [],
                          "destinationPortRanges": [],
                          "sourceAddressPrefixes": [],
                          "destinationAddressPrefixes": []
                        }
                      },
                      {
                        "name": "RDP_Public",
                        "properties": {
                          "protocol": "Tcp",
                          "sourcePortRange": "*",
                          "destinationPortRange": "3389",
                          "sourceAddressPrefix": "*",
                          "destinationAddressPrefix": "*",
                          "access": "Allow",
                          "priority": 110,
                          "direction": "Inbound",
                          "sourcePortRanges": [],
                          "destinationPortRanges": [],
                          "sourceAddressPrefixes": [],
                          "destinationAddressPrefixes": []
                        }
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks",
                      "apiVersion": "2020-07-01",
                      "name": "[format('vnet-{0}{1}', parameters('projectName'), parameters('envSuffix'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "copy": [
                          {
                            "name": "subnets",
                            "count": "[length(variables('client_subnets'))]",
                            "input": {
                              "name": "[variables('client_subnets')[copyIndex('subnets')].name]",
                              "properties": {
                                "addressPrefix": "[variables('client_subnets')[copyIndex('subnets')].subnetPrefix]",
                                "privateEndpointNetworkPolicies": "[variables('client_subnets')[copyIndex('subnets')].privateEndpointNetworkPolicies]",
                                "privateLinkServiceNetworkPolicies": "Disabled",
                                "serviceEndpoints": "[variables('client_subnets')[copyIndex('subnets')].serviceEndpoints]",
                                "networkSecurityGroup": "[variables('client_subnets')[copyIndex('subnets')].networkSecurityGroup]"
                              }
                            }
                          }
                        ],
                        "addressSpace": {
                          "addressPrefixes": [
                            "[format('10.{0}.0.0/20', parameters('vnetaddressspace'))]"
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-batch{0}', parameters('envSuffix')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/virtualNetworks",
                      "apiVersion": "2020-07-01",
                      "name": "[format('vnet-hub{0}', parameters('envSuffix'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "copy": [
                          {
                            "name": "subnets",
                            "count": "[length(variables('hub_subnets'))]",
                            "input": {
                              "name": "[variables('hub_subnets')[copyIndex('subnets')].name]",
                              "properties": {
                                "addressPrefix": "[variables('hub_subnets')[copyIndex('subnets')].subnetPrefix]",
                                "networkSecurityGroup": "[variables('hub_subnets')[copyIndex('subnets')].networkSecurityGroup]",
                                "routeTable": "[variables('hub_subnets')[copyIndex('subnets')].routeTable]"
                              }
                            }
                          }
                        ],
                        "addressSpace": {
                          "addressPrefixes": [
                            "[format('10.{0}.20.0/24', parameters('vnetaddressspace'))]"
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/networkSecurityGroups', format('nsg-hub-bastion{0}', parameters('envSuffix')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                      "apiVersion": "2020-07-01",
                      "name": "[format('{0}/hub_to_{1}', format('vnet-hub{0}', parameters('envSuffix')), parameters('projectName'))]",
                      "properties": {
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": true,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": false,
                        "remoteVirtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}{1}', parameters('projectName'), parameters('envSuffix')))]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}{1}', parameters('projectName'), parameters('envSuffix')))]",
                        "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-hub{0}', parameters('envSuffix')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
                      "apiVersion": "2020-07-01",
                      "name": "[format('{0}/{1}_to_hub', format('vnet-{0}{1}', parameters('projectName'), parameters('envSuffix')), parameters('projectName'))]",
                      "properties": {
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": true,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": false,
                        "remoteVirtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-hub{0}', parameters('envSuffix')))]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}{1}', parameters('projectName'), parameters('envSuffix')))]",
                        "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-hub{0}', parameters('envSuffix')))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2021-02-01",
                      "name": "[format('nsg-batch{0}', parameters('envSuffix'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "securityRules": "[concat(variables('sharedRules'), variables('BatchCustomRules'))]"
                      }
                    },
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2021-02-01",
                      "name": "[format('nsg-hub-bastion{0}', parameters('envSuffix'))]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "securityRules": [
                          {
                            "name": "AllowFromInternet",
                            "properties": {
                              "direction": "Inbound",
                              "protocol": "Tcp",
                              "access": "Allow",
                              "sourceAddressPrefix": "Internet",
                              "destinationAddressPrefix": "*",
                              "destinationPortRange": "443",
                              "sourcePortRange": "*",
                              "priority": 120,
                              "description": "Allow inbound HTTPS traffic to Bastion"
                            }
                          },
                          {
                            "name": "AllowGatewayManagerIn",
                            "properties": {
                              "direction": "Inbound",
                              "protocol": "Tcp",
                              "access": "Allow",
                              "sourceAddressPrefix": "GatewayManager",
                              "destinationAddressPrefix": "*",
                              "destinationPortRange": "443",
                              "sourcePortRange": "*",
                              "priority": 130,
                              "description": "Allow inbound HTTPS traffic to Bastion"
                            }
                          },
                          {
                            "name": "AllowLoadBalancer",
                            "properties": {
                              "direction": "Inbound",
                              "protocol": "Tcp",
                              "access": "Allow",
                              "sourceAddressPrefix": "AzureLoadBalancer",
                              "destinationAddressPrefix": "*",
                              "destinationPortRange": "443",
                              "sourcePortRange": "*",
                              "priority": 140,
                              "description": "Allow inbound HTTPS traffic to Bastion"
                            }
                          },
                          {
                            "name": "AllowBastionHostCommunication",
                            "properties": {
                              "direction": "Inbound",
                              "protocol": "Tcp",
                              "access": "Allow",
                              "sourceAddressPrefix": "VirtualNetwork",
                              "destinationAddressPrefix": "VirtualNetwork",
                              "destinationPortRanges": [
                                "8080",
                                "5701"
                              ],
                              "sourcePortRange": "*",
                              "priority": 150,
                              "description": "Allow inbound HTTPS traffic to Bastion"
                            }
                          },
                          {
                            "name": "AllowSSHRDPOut",
                            "properties": {
                              "direction": "Outbound",
                              "protocol": "*",
                              "access": "Allow",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "VirtualNetwork",
                              "destinationPortRanges": [
                                "22",
                                "3389"
                              ],
                              "sourcePortRange": "*",
                              "priority": 100,
                              "description": ""
                            }
                          },
                          {
                            "name": "AllowAzureCloudOut",
                            "properties": {
                              "direction": "Outbound",
                              "protocol": "Tcp",
                              "access": "Allow",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "AzureCloud",
                              "destinationPortRange": "443",
                              "sourcePortRange": "*",
                              "priority": 110,
                              "description": ""
                            }
                          },
                          {
                            "name": "AllowBastionCommunication",
                            "properties": {
                              "direction": "Outbound",
                              "protocol": "*",
                              "access": "Allow",
                              "sourceAddressPrefix": "VirtualNetwork",
                              "destinationAddressPrefix": "VirtualNetwork",
                              "destinationPortRanges": [
                                "8080",
                                "5701"
                              ],
                              "sourcePortRange": "*",
                              "priority": 120,
                              "description": ""
                            }
                          },
                          {
                            "name": "AllowGetSessionInfo",
                            "properties": {
                              "direction": "Outbound",
                              "protocol": "*",
                              "access": "Allow",
                              "sourceAddressPrefix": "*",
                              "destinationAddressPrefix": "Internet",
                              "destinationPortRange": "80",
                              "sourcePortRange": "*",
                              "priority": 130,
                              "description": ""
                            }
                          }
                        ]
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "privatelink.file.core.windows.net",
                      "location": "global"
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2020-06-01",
                      "name": "privatelink.database.windows.net",
                      "location": "global"
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones",
                      "apiVersion": "2018-09-01",
                      "name": "[parameters('privateDnsZones_private_cloudBrew_name')]",
                      "location": "global"
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/vnet-{1}{2}', 'privatelink.file.core.windows.net', parameters('projectName'), parameters('envSuffix'))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}{1}', parameters('projectName'), parameters('envSuffix')))]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}{1}', parameters('projectName'), parameters('envSuffix')))]",
                        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.file.core.windows.net')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2020-06-01",
                      "name": "[format('{0}/vnet-{1}{2}', 'privatelink.database.windows.net', parameters('projectName'), parameters('envSuffix'))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": false,
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}{1}', parameters('projectName'), parameters('envSuffix')))]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}{1}', parameters('projectName'), parameters('envSuffix')))]",
                        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.database.windows.net')]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2018-09-01",
                      "name": "[format('{0}/vnet-{1}{2}', parameters('privateDnsZones_private_cloudBrew_name'), parameters('projectName'), parameters('envSuffix'))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": true,
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}{1}', parameters('projectName'), parameters('envSuffix')))]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}{1}', parameters('projectName'), parameters('envSuffix')))]",
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_private_cloudBrew_name'))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                      "apiVersion": "2018-09-01",
                      "name": "[format('{0}/vnet-hub{1}', parameters('privateDnsZones_private_cloudBrew_name'), parameters('envSuffix'))]",
                      "location": "global",
                      "properties": {
                        "registrationEnabled": true,
                        "virtualNetwork": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-hub{0}', parameters('envSuffix')))]"
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-hub{0}', parameters('envSuffix')))]",
                        "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_private_cloudBrew_name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "client_vnet_id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}{1}', parameters('projectName'), parameters('envSuffix')))]"
                    },
                    "hub_vnet_id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworks', format('vnet-hub{0}', parameters('envSuffix')))]"
                    },
                    "private_dns_zone_name_id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.file.core.windows.net')]"
                    },
                    "private_dns_sql_zone_name_id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.database.windows.net')]"
                    },
                    "private_dns_cloudBrew_name_id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_private_cloudBrew_name'))]"
                    },
                    "clien_vnet_address_space": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', format('vnet-{0}{1}', parameters('projectName'), parameters('envSuffix')))).addressSpace.addressPrefixes[0]]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', format('rg-{0}-networking{1}', parameters('projectName'), parameters('envSuffix')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "storage",
              "resourceGroup": "[format('rg-{0}-storage{1}', parameters('projectName'), parameters('envSuffix'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "vnet_subnet": {
                    "value": "[format('{0}/subnets/private-endpoint', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}-networking{1}', parameters('projectName'), parameters('envSuffix'))), 'Microsoft.Resources/deployments', 'vNET'), '2019-10-01').outputs.client_vnet_id.value)]"
                  },
                  "private_dns_zone_name_id": {
                    "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}-networking{1}', parameters('projectName'), parameters('envSuffix'))), 'Microsoft.Resources/deployments', 'vNET'), '2019-10-01').outputs.private_dns_zone_name_id.value]"
                  },
                  "envSuffix": {
                    "value": "[parameters('envSuffix')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "projectName": {
                    "value": "[parameters('projectName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.412.5873",
                      "templateHash": "11534414355984383560"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "vnet_subnet": {
                      "type": "string"
                    },
                    "private_dns_zone_name_id": {
                      "type": "string"
                    },
                    "envSuffix": {
                      "type": "string"
                    },
                    "projectName": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2021-04-01",
                      "name": "[format('stg{0}', uniqueString(resourceGroup().id))]",
                      "location": "[parameters('location')]",
                      "kind": "StorageV2",
                      "properties": {
                        "supportsHttpsTrafficOnly": true,
                        "allowBlobPublicAccess": false,
                        "accessTier": "Hot",
                        "networkAcls": {
                          "defaultAction": "Deny",
                          "bypass": "AzureServices",
                          "virtualNetworkRules": [
                            {
                              "id": "[parameters('vnet_subnet')]",
                              "action": "Allow"
                            }
                          ],
                          "ipRules": []
                        }
                      },
                      "sku": {
                        "name": "Standard_LRS"
                      }
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
                      "apiVersion": "2021-02-01",
                      "name": "[format('{0}/default/share', format('stg{0}', uniqueString(resourceGroup().id)))]",
                      "properties": {
                        "shareQuota": 10,
                        "enabledProtocols": "SMB",
                        "accessTier": "TransactionOptimized"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', format('stg{0}', uniqueString(resourceGroup().id)))]"
                      ]
                    },
                    {
                      "type": "Microsoft.Storage/storageAccounts",
                      "apiVersion": "2021-04-01",
                      "name": "[format('stgdiag{0}', uniqueString(resourceGroup().id))]",
                      "location": "[parameters('location')]",
                      "kind": "StorageV2",
                      "properties": {
                        "supportsHttpsTrafficOnly": true,
                        "allowBlobPublicAccess": false,
                        "accessTier": "Hot",
                        "networkAcls": {
                          "bypass": "AzureServices",
                          "virtualNetworkRules": [],
                          "ipRules": [],
                          "defaultAction": "Allow"
                        }
                      },
                      "sku": {
                        "name": "Standard_LRS"
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2019-10-01",
                      "name": "storage_private_endpoint",
                      "resourceGroup": "[format('rg-{0}-networking{1}', parameters('projectName'), parameters('envSuffix'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "vnet_subnet": {
                            "value": "[parameters('vnet_subnet')]"
                          },
                          "clientStorage": {
                            "value": "[resourceId('Microsoft.Storage/storageAccounts', format('stg{0}', uniqueString(resourceGroup().id)))]"
                          },
                          "private_dns_zone_name_id": {
                            "value": "[parameters('private_dns_zone_name_id')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.412.5873",
                              "templateHash": "12158771984312347924"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "vnet_subnet": {
                              "type": "string"
                            },
                            "clientStorage": {
                              "type": "string"
                            },
                            "private_dns_zone_name_id": {
                              "type": "string"
                            }
                          },
                          "functions": [],
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateEndpoints",
                              "apiVersion": "2020-11-01",
                              "name": "files",
                              "location": "[parameters('location')]",
                              "properties": {
                                "privateLinkServiceConnections": [
                                  {
                                    "name": "files",
                                    "properties": {
                                      "privateLinkServiceId": "[parameters('clientStorage')]",
                                      "groupIds": [
                                        "file"
                                      ]
                                    }
                                  }
                                ],
                                "manualPrivateLinkServiceConnections": [],
                                "subnet": {
                                  "id": "[parameters('vnet_subnet')]"
                                },
                                "customDnsConfigs": []
                              }
                            },
                            {
                              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                              "apiVersion": "2020-11-01",
                              "name": "[format('{0}/{1}', 'files', 'default')]",
                              "properties": {
                                "privateDnsZoneConfigs": [
                                  {
                                    "name": "privatelink-file-core-windows-net",
                                    "properties": {
                                      "privateDnsZoneId": "[parameters('private_dns_zone_name_id')]"
                                    }
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateEndpoints', 'files')]"
                              ]
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', format('stg{0}', uniqueString(resourceGroup().id)))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "diagStorageBlob": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', format('stgdiag{0}', uniqueString(resourceGroup().id)))).primaryEndpoints.blob]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}-networking{1}', parameters('projectName'), parameters('envSuffix'))), 'Microsoft.Resources/deployments', 'vNET')]"
              ]
            }
          ],
          "outputs": {
            "diagStorageBlob": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}-storage{1}', parameters('projectName'), parameters('envSuffix'))), 'Microsoft.Resources/deployments', 'storage'), '2019-10-01').outputs.diagStorageBlob.value]"
            },
            "privateDNSSQLName": {
              "type": "string",
              "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}-networking{1}', parameters('projectName'), parameters('envSuffix'))), 'Microsoft.Resources/deployments', 'vNET'), '2019-10-01').outputs.private_dns_sql_zone_name_id.value]"
            }
          }
        }
      }
    },
    {
      "condition": "[parameters('infra_deployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "infra_deployment",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "diagStorage": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', 'core_deployment'), '2019-10-01').outputs.diagStorageBlob.value]"
          },
          "privateDNSSQLName": {
            "value": "[reference(subscriptionResourceId('Microsoft.Resources/deployments', 'core_deployment'), '2019-10-01').outputs.privateDNSSQLName.value]"
          },
          "envSuffix": {
            "value": "[parameters('envSuffix')]"
          },
          "projectName": {
            "value": "[parameters('projectName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.412.5873",
              "templateHash": "8992284443368961522"
            }
          },
          "parameters": {
            "envSuffix": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "westeurope"
            },
            "diagStorage": {
              "type": "string"
            },
            "privateDNSSQLName": {
              "type": "string"
            },
            "projectName": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "batch",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "envSuffix": {
                    "value": "[parameters('envSuffix')]"
                  },
                  "diagStorage": {
                    "value": "[parameters('diagStorage')]"
                  },
                  "projectName": {
                    "value": "[parameters('projectName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.412.5873",
                      "templateHash": "11537075258049024961"
                    }
                  },
                  "parameters": {
                    "resourceGroupPrefix": {
                      "type": "string",
                      "defaultValue": "[format('rg-{0}-batch', parameters('projectName'))]"
                    },
                    "envSuffix": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "westeurope"
                    },
                    "namePrefix": {
                      "type": "string",
                      "defaultValue": "batch"
                    },
                    "diagStorage": {
                      "type": "string"
                    },
                    "projectName": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "variables": {
                    "resourceGroupName": "[format('{0}{1}', parameters('resourceGroupPrefix'), parameters('envSuffix'))]"
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2019-10-01",
                      "name": "[format('nic-{0}', parameters('namePrefix'))]",
                      "resourceGroup": "[format('rg-{0}-networking{1}', parameters('projectName'), parameters('envSuffix'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "networkInterfaceName": {
                            "value": "[format('nic-{0}', parameters('namePrefix'))]"
                          },
                          "subnetRef": {
                            "value": "[format('{0}/subnets/batch', extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}-networking{1}', parameters('projectName'), parameters('envSuffix'))), 'Microsoft.Network/virtualNetworks', format('vnet-{0}{1}', parameters('projectName'), parameters('envSuffix'))))]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.412.5873",
                              "templateHash": "8125626226130804705"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "networkInterfaceName": {
                              "type": "string"
                            },
                            "subnetRef": {
                              "type": "string"
                            },
                            "privateIPAllocationMethod": {
                              "type": "string",
                              "defaultValue": "Dynamic"
                            }
                          },
                          "functions": [],
                          "resources": [
                            {
                              "type": "Microsoft.Network/publicIPAddresses",
                              "apiVersion": "2022-05-01",
                              "name": "pip-batch",
                              "location": "[parameters('location')]",
                              "sku": {
                                "name": "Standard",
                                "tier": "Regional"
                              },
                              "properties": {
                                "publicIPAddressVersion": "IPv4",
                                "publicIPAllocationMethod": "Static"
                              }
                            },
                            {
                              "type": "Microsoft.Network/networkInterfaces",
                              "apiVersion": "2021-02-01",
                              "name": "[parameters('networkInterfaceName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "ipConfigurations": [
                                  {
                                    "name": "ipconfig1",
                                    "properties": {
                                      "subnet": {
                                        "id": "[parameters('subnetRef')]"
                                      },
                                      "privateIPAllocationMethod": "[parameters('privateIPAllocationMethod')]",
                                      "publicIPAddress": "[reference(resourceId('Microsoft.Network/publicIPAddresses', 'pip-batch'), '2022-05-01', 'full')]"
                                    }
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/publicIPAddresses', 'pip-batch')]"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2019-10-01",
                      "name": "recoveryVault",
                      "resourceGroup": "[variables('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "vaultName": {
                            "value": "[format('vault-{0}{1}', parameters('namePrefix'), parameters('envSuffix'))]"
                          },
                          "projectName": {
                            "value": "[parameters('projectName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.412.5873",
                              "templateHash": "14689210912316216507"
                            }
                          },
                          "parameters": {
                            "vaultName": {
                              "type": "string"
                            },
                            "projectName": {
                              "type": "string"
                            }
                          },
                          "functions": [],
                          "variables": {
                            "location": "[resourceGroup().location]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.RecoveryServices/vaults",
                              "apiVersion": "2021-01-01",
                              "name": "[parameters('vaultName')]",
                              "location": "[variables('location')]",
                              "sku": {
                                "name": "RS0",
                                "tier": "Standard"
                              },
                              "identity": {
                                "type": "None"
                              },
                              "properties": {}
                            },
                            {
                              "type": "Microsoft.RecoveryServices/vaults/backupstorageconfig",
                              "apiVersion": "2021-04-01",
                              "name": "[format('{0}/vaultstorageconfig', parameters('vaultName'))]",
                              "location": "[variables('location')]",
                              "properties": {
                                "storageModelType": "LocallyRedundant"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaultName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
                              "apiVersion": "2021-07-01",
                              "name": "[format('{0}/{1}', parameters('vaultName'), format('{0}-DefaultPolicy', parameters('projectName')))]",
                              "properties": {
                                "backupManagementType": "AzureIaasVM",
                                "instantRPDetails": {},
                                "schedulePolicy": {
                                  "schedulePolicyType": "SimpleSchedulePolicy",
                                  "scheduleRunFrequency": "Daily",
                                  "scheduleRunTimes": [
                                    "11/24/2021 09:00:00"
                                  ],
                                  "scheduleWeeklyFrequency": 0
                                },
                                "retentionPolicy": {
                                  "retentionPolicyType": "LongTermRetentionPolicy",
                                  "dailySchedule": {
                                    "retentionTimes": [
                                      "11/24/2021 09:00:00"
                                    ],
                                    "retentionDuration": {
                                      "count": 30,
                                      "durationType": "Days"
                                    }
                                  }
                                },
                                "instantRpRetentionRangeInDays": 2,
                                "timeZone": "UTC",
                                "protectedItemsCount": 0
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaultName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
                              "apiVersion": "2021-07-01",
                              "name": "[format('{0}/{1}', parameters('vaultName'), format('{0}-HourlyLogBackup', parameters('projectName')))]",
                              "properties": {
                                "backupManagementType": "AzureWorkload",
                                "workLoadType": "SQLDataBase",
                                "settings": {
                                  "timeZone": "UTC",
                                  "issqlcompression": false,
                                  "isCompression": false
                                },
                                "subProtectionPolicy": [
                                  {
                                    "policyType": "Full",
                                    "schedulePolicy": {
                                      "schedulePolicyType": "SimpleSchedulePolicy",
                                      "scheduleRunFrequency": "Daily",
                                      "scheduleRunTimes": [
                                        "11/24/2021 09:00:00"
                                      ],
                                      "scheduleWeeklyFrequency": 0
                                    },
                                    "retentionPolicy": {
                                      "retentionPolicyType": "LongTermRetentionPolicy",
                                      "dailySchedule": {
                                        "retentionTimes": [
                                          "11/24/2021 09:00:00"
                                        ],
                                        "retentionDuration": {
                                          "count": 30,
                                          "durationType": "Days"
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "policyType": "Log",
                                    "schedulePolicy": {
                                      "schedulePolicyType": "LogSchedulePolicy",
                                      "scheduleFrequencyInMins": 60
                                    },
                                    "retentionPolicy": {
                                      "retentionPolicyType": "SimpleRetentionPolicy",
                                      "retentionDuration": {
                                        "count": 30,
                                        "durationType": "Days"
                                      }
                                    }
                                  }
                                ],
                                "protectedItemsCount": 0
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.RecoveryServices/vaults', parameters('vaultName'))]"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2019-10-01",
                      "name": "[parameters('namePrefix')]",
                      "resourceGroup": "[variables('resourceGroupName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "vmName": {
                            "value": "[parameters('namePrefix')]"
                          },
                          "namePrefix": {
                            "value": "[parameters('namePrefix')]"
                          },
                          "envSuffix": {
                            "value": "[parameters('envSuffix')]"
                          },
                          "adminPassword": {
                            "reference": {
                              "keyVault": {
                                "id": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}-management{1}', parameters('projectName'), parameters('envSuffix'))), 'Microsoft.KeyVault/vaults', format('kv-{0}-{1}{2}', parameters('projectName'), substring(uniqueString(subscription().subscriptionId), 0, 6), parameters('envSuffix')))]"
                              },
                              "secretName": "vmBrewadmin"
                            }
                          },
                          "diagStorage": {
                            "value": "[parameters('diagStorage')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "projectName": {
                            "value": "[parameters('projectName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.412.5873",
                              "templateHash": "9774850687628694039"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "vmSize": {
                              "type": "string",
                              "defaultValue": "Standard_B2s"
                            },
                            "vmName": {
                              "type": "string"
                            },
                            "namePrefix": {
                              "type": "string"
                            },
                            "envSuffix": {
                              "type": "string"
                            },
                            "diagStorage": {
                              "type": "string"
                            },
                            "projectName": {
                              "type": "string"
                            },
                            "adminPassword": {
                              "type": "secureString"
                            }
                          },
                          "functions": [],
                          "resources": [
                            {
                              "type": "Microsoft.Compute/virtualMachines",
                              "apiVersion": "2020-12-01",
                              "name": "[parameters('vmName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "hardwareProfile": {
                                  "vmSize": "[parameters('vmSize')]"
                                },
                                "storageProfile": {
                                  "imageReference": {
                                    "publisher": "MicrosoftWindowsServer",
                                    "offer": "WindowsServer",
                                    "sku": "2022-datacenter-smalldisk",
                                    "version": "latest"
                                  },
                                  "osDisk": {
                                    "createOption": "FromImage",
                                    "managedDisk": {
                                      "storageAccountType": "StandardSSD_LRS"
                                    }
                                  }
                                },
                                "networkProfile": {
                                  "networkInterfaces": [
                                    {
                                      "id": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}-networking{1}', parameters('projectName'), parameters('envSuffix'))), 'Microsoft.Network/networkInterfaces', format('nic-{0}', parameters('namePrefix')))]"
                                    }
                                  ]
                                },
                                "osProfile": {
                                  "adminUsername": "Brewadmin",
                                  "adminPassword": "[parameters('adminPassword')]",
                                  "computerName": "[parameters('vmName')]"
                                },
                                "diagnosticsProfile": {
                                  "bootDiagnostics": {
                                    "enabled": true,
                                    "storageUri": "[parameters('diagStorage')]"
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}-networking{1}', parameters('projectName'), parameters('envSuffix'))), 'Microsoft.Resources/deployments', format('nic-{0}', parameters('namePrefix')))]"
                      ]
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "sql",
              "resourceGroup": "[format('rg-{0}-db{1}', parameters('projectName'), parameters('envSuffix'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "serverLocation": {
                    "value": "[parameters('location')]"
                  },
                  "serverName": {
                    "value": "[format('sql-{0}-{1}{2}', parameters('projectName'), substring(uniqueString(subscription().subscriptionId), 0, 6), parameters('envSuffix'))]"
                  },
                  "privateDNSSQLName": {
                    "value": "[parameters('privateDNSSQLName')]"
                  },
                  "envSuffix": {
                    "value": "[parameters('envSuffix')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "projectName": {
                    "value": "[parameters('projectName')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.412.5873",
                      "templateHash": "10061872496703352885"
                    }
                  },
                  "parameters": {
                    "envSuffix": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]"
                    },
                    "administratorLogin": {
                      "type": "string",
                      "defaultValue": "Brewadmin"
                    },
                    "administratorLoginPassword": {
                      "type": "secureString",
                      "defaultValue": ""
                    },
                    "administrators": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "serverName": {
                      "type": "string",
                      "defaultValue": "[format('sql-{0}-{1}{2}', parameters('projectName'), substring(uniqueString(subscription().subscriptionId), 0, 6), parameters('envSuffix'))]"
                    },
                    "serverLocation": {
                      "type": "string"
                    },
                    "privateDNSSQLName": {
                      "type": "string"
                    },
                    "projectName": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2019-10-01",
                      "name": "[parameters('serverName')]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "serverName": {
                            "value": "[parameters('serverName')]"
                          },
                          "administratorLogin": {
                            "value": "[parameters('administratorLogin')]"
                          },
                          "administratorLoginPassword": {
                            "reference": {
                              "keyVault": {
                                "id": "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}-management{1}', parameters('projectName'), parameters('envSuffix'))), 'Microsoft.KeyVault/vaults', format('kv-{0}-{1}{2}', parameters('projectName'), substring(uniqueString(subscription().subscriptionId), 0, 6), parameters('envSuffix')))]"
                              },
                              "secretName": "sqlBrewadmin"
                            }
                          },
                          "envSuffix": {
                            "value": "[parameters('envSuffix')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "projectName": {
                            "value": "[parameters('projectName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.412.5873",
                              "templateHash": "1020640855315667651"
                            }
                          },
                          "parameters": {
                            "administratorLogin": {
                              "type": "string"
                            },
                            "envSuffix": {
                              "type": "string"
                            },
                            "serverName": {
                              "type": "string",
                              "defaultValue": "[format('sql-{0}-{1}{2}', parameters('projectName'), substring(uniqueString(subscription().subscriptionId), 0, 6), parameters('envSuffix'))]"
                            },
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "administratorLoginPassword": {
                              "type": "secureString"
                            },
                            "allowAzureIps": {
                              "type": "bool",
                              "defaultValue": true
                            },
                            "elasticPoolName": {
                              "type": "string",
                              "defaultValue": "[format('sqldb-{0}-pool{1}', parameters('projectName'), parameters('envSuffix'))]"
                            },
                            "skuName": {
                              "type": "string",
                              "defaultValue": "BasicPool"
                            },
                            "tier": {
                              "type": "string",
                              "defaultValue": "Basic"
                            },
                            "poolLimit": {
                              "type": "int",
                              "defaultValue": 50
                            },
                            "poolSize": {
                              "type": "int",
                              "defaultValue": 5242880000
                            },
                            "perDatabasePerformanceMin": {
                              "type": "int",
                              "defaultValue": 0
                            },
                            "perDatabasePerformanceMax": {
                              "type": "int",
                              "defaultValue": 5
                            },
                            "zoneRedundant": {
                              "type": "bool",
                              "defaultValue": false
                            },
                            "licenseType": {
                              "type": "string",
                              "defaultValue": "LicenseIncluded"
                            },
                            "elasticPoolTags": {
                              "type": "object",
                              "defaultValue": {}
                            },
                            "maintenanceConfigurationId": {
                              "type": "string",
                              "defaultValue": ""
                            },
                            "projectName": {
                              "type": "string"
                            }
                          },
                          "functions": [],
                          "resources": [
                            {
                              "type": "Microsoft.Sql/servers",
                              "apiVersion": "2020-11-01-preview",
                              "name": "[parameters('serverName')]",
                              "location": "[parameters('location')]",
                              "properties": {
                                "version": "12.0",
                                "administratorLogin": "[parameters('administratorLogin')]",
                                "administratorLoginPassword": "[parameters('administratorLoginPassword')]"
                              }
                            },
                            {
                              "condition": "[parameters('allowAzureIps')]",
                              "type": "Microsoft.Sql/servers/firewallRules",
                              "apiVersion": "2021-02-01-preview",
                              "name": "[format('{0}/{1}', parameters('serverName'), 'AllowAllWindowsAzureIps')]",
                              "properties": {
                                "endIpAddress": "0.0.0.0",
                                "startIpAddress": "0.0.0.0"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]"
                              ]
                            },
                            {
                              "type": "Microsoft.Sql/servers/elasticPools",
                              "apiVersion": "2021-02-01-preview",
                              "name": "[format('{0}/{1}', parameters('serverName'), parameters('elasticPoolName'))]",
                              "location": "[parameters('location')]",
                              "sku": {
                                "name": "[parameters('skuName')]",
                                "tier": "[parameters('tier')]",
                                "capacity": "[parameters('poolLimit')]"
                              },
                              "properties": {
                                "perDatabaseSettings": {
                                  "minCapacity": "[parameters('perDatabasePerformanceMin')]",
                                  "maxCapacity": "[parameters('perDatabasePerformanceMax')]"
                                },
                                "maxSizeBytes": "[parameters('poolSize')]",
                                "zoneRedundant": "[parameters('zoneRedundant')]",
                                "licenseType": "[parameters('licenseType')]"
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]"
                              ]
                            }
                          ],
                          "outputs": {
                            "sqlID": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Sql/servers', parameters('serverName'))]"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2019-10-01",
                      "name": "[format('pe-{0}', parameters('serverName'))]",
                      "resourceGroup": "[format('rg-{0}-networking{1}', parameters('projectName'), parameters('envSuffix'))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "envSuffix": {
                            "value": "[parameters('envSuffix')]"
                          },
                          "vnet_subnet": {
                            "value": "[format('{0}/subnets/private-endpoint', extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, format('rg-{0}-networking{1}', parameters('projectName'), parameters('envSuffix'))), 'Microsoft.Network/virtualNetworks', format('vnet-{0}{1}', parameters('projectName'), parameters('envSuffix'))))]"
                          },
                          "sqlID": {
                            "value": "[reference(resourceId('Microsoft.Resources/deployments', parameters('serverName')), '2019-10-01').outputs.sqlID.value]"
                          },
                          "private_dns_zone_name_id": {
                            "value": "[parameters('privateDNSSQLName')]"
                          },
                          "location": {
                            "value": "[parameters('location')]"
                          },
                          "projectName": {
                            "value": "[parameters('projectName')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.4.412.5873",
                              "templateHash": "15085270222609664115"
                            }
                          },
                          "parameters": {
                            "location": {
                              "type": "string",
                              "defaultValue": "[resourceGroup().location]"
                            },
                            "vnet_subnet": {
                              "type": "string"
                            },
                            "sqlID": {
                              "type": "string"
                            },
                            "private_dns_zone_name_id": {
                              "type": "string"
                            },
                            "envSuffix": {
                              "type": "string"
                            },
                            "projectName": {
                              "type": "string"
                            }
                          },
                          "functions": [],
                          "variables": {
                            "privateEndpoints_name": "[format('pe-sql-{0}{1}', parameters('projectName'), parameters('envSuffix'))]"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Network/privateEndpoints",
                              "apiVersion": "2020-11-01",
                              "name": "sql",
                              "location": "[parameters('location')]",
                              "tags": {
                                "project": "CoudBrew",
                                "Purpose": "For fun",
                                "owner": "Emil Wasilewski"
                              },
                              "properties": {
                                "privateLinkServiceConnections": [
                                  {
                                    "name": "[variables('privateEndpoints_name')]",
                                    "properties": {
                                      "privateLinkServiceId": "[parameters('sqlID')]",
                                      "groupIds": [
                                        "sqlServer"
                                      ]
                                    }
                                  }
                                ],
                                "manualPrivateLinkServiceConnections": [],
                                "subnet": {
                                  "id": "[parameters('vnet_subnet')]"
                                },
                                "customDnsConfigs": []
                              }
                            },
                            {
                              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                              "apiVersion": "2020-11-01",
                              "name": "[format('{0}/{1}', 'sql', 'default')]",
                              "properties": {
                                "privateDnsZoneConfigs": [
                                  {
                                    "name": "[format('pe-sql-{0}{1}', parameters('projectName'), parameters('envSuffix'))]",
                                    "properties": {
                                      "privateDnsZoneId": "[parameters('private_dns_zone_name_id')]"
                                    }
                                  }
                                ]
                              },
                              "dependsOn": [
                                "[resourceId('Microsoft.Network/privateEndpoints', 'sql')]"
                              ]
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Resources/deployments', parameters('serverName'))]"
                      ]
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', 'core_deployment')]"
      ]
    }
  ]
}